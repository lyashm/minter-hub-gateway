// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProfileCreate profile create
// swagger:model ProfileCreate
type ProfileCreate struct {

	// email
	// Required: true
	// Format: email
	Email *strfmt.Email `json:"email"`

	// password
	// Required: true
	// Min Length: 6
	Password *string `json:"password"`

	// reCAPTCHA v3
	ReCAPTCHA string `json:"reCAPTCHA,omitempty"`

	// username
	// Required: true
	// Min Length: 6
	Username *string `json:"username"`
}

// Validate validates this profile create
func (m *ProfileCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProfileCreate) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	if err := validate.FormatOf("email", "body", "email", m.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ProfileCreate) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("password", "body", m.Password); err != nil {
		return err
	}

	if err := validate.MinLength("password", "body", string(*m.Password), 6); err != nil {
		return err
	}

	return nil
}

func (m *ProfileCreate) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	if err := validate.MinLength("username", "body", string(*m.Username), 6); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProfileCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProfileCreate) UnmarshalBinary(b []byte) error {
	var res ProfileCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
